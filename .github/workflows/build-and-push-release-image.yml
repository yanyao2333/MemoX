name: build-and-push-release-image

on:
  push:
    branches:
      # Run on pushing branches like 'v1.0.0', 'v0.22.2rc'
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build and push (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-push-release-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Use Latest Corepack
        run: |
          echo "Before: corepack version => $(corepack --version || echo 'not installed')"
          npm install -g corepack@latest
          echo "After : corepack version => $(corepack --version)"
          corepack enable
          pnpm --version

      - name: Extract build args
        # Extract version from tag name or manual input
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: yanyaobbb  # 替换为你的 Docker Hub 用户名
          password: ${{ secrets.DOCKER_HUB_TOKEN }}  # 使用 Docker Hub Token

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          version: v0.9.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            yanyaobbb/memo-x  # 替换为你的 Docker Hub 仓库名称
          tags: |
            type=raw,value=${{ env.VERSION }}
          flavor: |
            latest=true
          labels: |
            org.opencontainers.image.version=${{ env.VERSION }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
